{"name": "test_login_valid_creds[ENV.PROD]", "status": "broken", "statusDetails": {"message": "json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 20 column 9 (char 780)", "trace": "self = <tests.test_login.TestLogin object at 0x00000204B16FF4C0>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"ea2b95f66568b5d41f23862cab5e7282\")>\nenvironment = <ENV.PROD: (3, 'PROD', 'prod_config')>\n\n    @allure.feature('Login Page')\n    @allure.testcase(\"https://accunture.testrail.io/index.php?/cases/view/9999\", 'Test Case Link')\n    @pytest.mark.C9999 #TestRail ID\n    @pytest.mark.smoke\n    @pytest.mark.parametrize(\"environment\", [ENV.PROD, ENV.STAGE])\n    def test_login_valid_creds(self, driver, environment):\n    \n>       login_page = LoginPage(env=environment)\n\ntest_login.py:18: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\services\\herokuapp\\pages\\login_page\\__init__.py:16: in __init__\n    self.config = CommonHelper.json_result_reader(file_name=env.config)\n..\\utility\\helpers.py:120: in json_result_reader\n    data = json.load(f)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\__init__.py:293: in load\n    return loads(fp.read(),\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\__init__.py:346: in loads\n    return _default_decoder.decode(s)\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\decoder.py:337: in decode\n    obj, end = self.raw_decode(s, idx=_w(s, 0).end())\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <json.decoder.JSONDecoder object at 0x00000204AE601730>\ns = '{\\n  \"services\": {\\n    \"herokuapp\": {\\n      \"pages\": {\\n        \"login_page\": {\\n          \"url\" : \"https://the-int...ome_txt\" : \"Welcome to the Secure Area. When you are done click logout below.\",\\n\\n        }\\n      }\\n    }\\n  }\\n}\\n'\nidx = 0\n\n    def raw_decode(self, s, idx=0):\n        \"\"\"Decode a JSON document from ``s`` (a ``str`` beginning with\n        a JSON document) and return a 2-tuple of the Python\n        representation and the index in ``s`` where the document ended.\n    \n        This can be used to decode a JSON document from a string that may\n        have extraneous data at the end.\n    \n        \"\"\"\n        try:\n>           obj, end = self.scan_once(s, idx)\nE           json.decoder.JSONDecodeError: Expecting property name enclosed in double quotes: line 20 column 9 (char 780)\n\n..\\..\\..\\AppData\\Local\\Programs\\Python\\Python39\\lib\\json\\decoder.py:353: JSONDecodeError"}, "steps": [{"name": "Add failed screenshot", "status": "passed", "attachments": [{"name": "Failed screenshot", "source": "a2b3ac85-e41f-49a1-941e-80af3d3ee64d-attachment.png", "type": "image/png"}], "start": 1637827626689, "stop": 1637827627150}], "attachments": [{"name": "log", "source": "592368f4-514b-4ce5-90e2-5d9197c93889-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "51bc38eb-71d6-4481-8f1f-106586b48fed-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "environment", "value": "<ENV.PROD: (3, 'PROD', 'prod_config')>"}], "start": 1637827625998, "stop": 1637827626000, "uuid": "5f7f1175-ef67-4b4d-b2b0-8152c5d3e77d", "historyId": "866e4759e30192ab342949e4ff9d0921", "testCaseId": "35a7920858192c899de77629e605663a", "fullName": "tests.test_login.TestLogin#test_login_valid_creds", "labels": [{"name": "feature", "value": "Login Page"}, {"name": "tag", "value": "C9999"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "LAPTOP-LKUFHBJQ"}, {"name": "thread", "value": "52856-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}], "links": [{"type": "test_case", "url": "https://accunture.testrail.io/index.php?/cases/view/9999", "name": "Test Case Link"}]}