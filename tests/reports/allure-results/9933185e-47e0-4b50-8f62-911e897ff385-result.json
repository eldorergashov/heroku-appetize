{"name": "test_login_valid_creds[ENV.STAGE]", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //div[@id='flash'][<class 'int'>] because of the following error:\nSyntaxError: Failed to execute 'evaluate' on 'Document': The string '//div[@id='flash'][<class 'int'>]' is not a valid XPath expression.\n  (Session info: chrome=96.0.4664.45)\nStacktrace:\nBacktrace:\n\tOrdinal0 [0x00766903+2517251]\n\tOrdinal0 [0x006FF8E1+2095329]\n\tOrdinal0 [0x00602848+1058888]\n\tOrdinal0 [0x00604F44+1068868]\n\tOrdinal0 [0x00604E0E+1068558]\n\tOrdinal0 [0x00605070+1069168]\n\tOrdinal0 [0x0062D1C2+1233346]\n\tOrdinal0 [0x0062D63B+1234491]\n\tOrdinal0 [0x00657812+1406994]\n\tOrdinal0 [0x0064650A+1336586]\n\tOrdinal0 [0x00655BBF+1399743]\n\tOrdinal0 [0x0064639B+1336219]\n\tOrdinal0 [0x006227A7+1189799]\n\tOrdinal0 [0x00623609+1193481]\n\tGetHandleVerifier [0x008F5904+1577972]\n\tGetHandleVerifier [0x009A0B97+2279047]\n\tGetHandleVerifier [0x007F6D09+534521]\n\tGetHandleVerifier [0x007F5DB9+530601]\n\tOrdinal0 [0x00704FF9+2117625]\n\tOrdinal0 [0x007098A8+2136232]\n\tOrdinal0 [0x007099E2+2136546]\n\tOrdinal0 [0x00713541+2176321]\n\tBaseThreadInitThunk [0x7555FA29+25]\n\tRtlGetAppContainerNamedObjectPath [0x77387A9E+286]\n\tRtlGetAppContainerNamedObjectPath [0x77387A6E+238]", "trace": "self = <tests.test_login.TestLogin object at 0x0000025CC5876B20>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"eee432cae1b0d8c0fec70b369598aa63\")>\nenvironment = <ENV.STAGE: (2, 'STAGE')>\n\n    @allure.feature('Login Page')\n    @allure.testcase(\"https://accunture.testrail.io/index.php?/cases/view/9999\", 'Test Case Link')\n    @pytest.mark.C9999 #TestRail ID\n    @pytest.mark.smoke\n    @pytest.mark.parametrize(\"environment\", [ENV.STAGE])\n    def test_login_valid_creds(self, driver, environment):\n        secure_logged_in_txt = \" You logged into a secure area!\"\n        login_page = LoginPage(env=environment)\n        login_page.open_page(driver)\n        login_page.verify_page(driver)\n        login_page.fill_credentials_login(driver, username='tomsmith', password='SuperSecretPassword!')\n        secure_page = SecurePage(env=environment)\n        secure_page.verify_page(driver)\n>       text = secure_page.get_flash_message_box_text(driver)\n\ntest_login.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n..\\services\\herokuapp\\pages\\secure_area\\__init__.py:46: in get_flash_message_box_text\n    element: WebElement = WebElementHelper.get_element(driver, custom_locator,\n..\\utility\\helpers.py:39: in get_element\n    element: WebElement = WebElementHelper.__condition_provider(driver, locator=locator, strategy=strategy,\n..\\utility\\helpers.py:69: in __condition_provider\n    element = wait.until(ec_condition((By.XPATH, locator)))\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:82: in until\n    raise e\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:78: in until\n    value = method(self._driver)\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:127: in _predicate\n    raise e\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\support\\expected_conditions.py:125: in _predicate\n    return _element_if_visible(driver.find_element(*locator))\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:1244: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:424: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000025CC5876B80>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"invalid selector\",\"message\":\"invalid selector: Unable to locate an elemen...\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77387A9E+286]\\\\n\\\\tRtlGetAppContainerNamedObjectPath [0x77387A6E+238]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"\n        Checks that a JSON response from the WebDriver does not have an error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get('status', None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get('value', None)\n            if value_json and isinstance(value_json, str):\n                import json\n                try:\n                    value = json.loads(value_json)\n                    if len(value.keys()) == 1:\n                        value = value['value']\n                    status = value.get('error', None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get('message')\n                    else:\n                        message = value.get('message', None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        if status in ErrorCode.NO_SUCH_ELEMENT:\n            exception_class = NoSuchElementException\n        elif status in ErrorCode.NO_SUCH_FRAME:\n            exception_class = NoSuchFrameException\n        elif status in ErrorCode.NO_SUCH_SHADOW_ROOT:\n            exception_class = NoSuchShadowRootException\n        elif status in ErrorCode.NO_SUCH_WINDOW:\n            exception_class = NoSuchWindowException\n        elif status in ErrorCode.STALE_ELEMENT_REFERENCE:\n            exception_class = StaleElementReferenceException\n        elif status in ErrorCode.ELEMENT_NOT_VISIBLE:\n            exception_class = ElementNotVisibleException\n        elif status in ErrorCode.INVALID_ELEMENT_STATE:\n            exception_class = InvalidElementStateException\n        elif status in ErrorCode.INVALID_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR \\\n                or status in ErrorCode.INVALID_XPATH_SELECTOR_RETURN_TYPER:\n            exception_class = InvalidSelectorException\n        elif status in ErrorCode.ELEMENT_IS_NOT_SELECTABLE:\n            exception_class = ElementNotSelectableException\n        elif status in ErrorCode.ELEMENT_NOT_INTERACTABLE:\n            exception_class = ElementNotInteractableException\n        elif status in ErrorCode.INVALID_COOKIE_DOMAIN:\n            exception_class = InvalidCookieDomainException\n        elif status in ErrorCode.UNABLE_TO_SET_COOKIE:\n            exception_class = UnableToSetCookieException\n        elif status in ErrorCode.TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.SCRIPT_TIMEOUT:\n            exception_class = TimeoutException\n        elif status in ErrorCode.UNKNOWN_ERROR:\n            exception_class = WebDriverException\n        elif status in ErrorCode.UNEXPECTED_ALERT_OPEN:\n            exception_class = UnexpectedAlertPresentException\n        elif status in ErrorCode.NO_ALERT_OPEN:\n            exception_class = NoAlertPresentException\n        elif status in ErrorCode.IME_NOT_AVAILABLE:\n            exception_class = ImeNotAvailableException\n        elif status in ErrorCode.IME_ENGINE_ACTIVATION_FAILED:\n            exception_class = ImeActivationFailedException\n        elif status in ErrorCode.MOVE_TARGET_OUT_OF_BOUNDS:\n            exception_class = MoveTargetOutOfBoundsException\n        elif status in ErrorCode.JAVASCRIPT_ERROR:\n            exception_class = JavascriptException\n        elif status in ErrorCode.SESSION_NOT_CREATED:\n            exception_class = SessionNotCreatedException\n        elif status in ErrorCode.INVALID_ARGUMENT:\n            exception_class = InvalidArgumentException\n        elif status in ErrorCode.NO_SUCH_COOKIE:\n            exception_class = NoSuchCookieException\n        elif status in ErrorCode.UNABLE_TO_CAPTURE_SCREEN:\n            exception_class = ScreenshotException\n        elif status in ErrorCode.ELEMENT_CLICK_INTERCEPTED:\n            exception_class = ElementClickInterceptedException\n        elif status in ErrorCode.INSECURE_CERTIFICATE:\n            exception_class = InsecureCertificateException\n        elif status in ErrorCode.INVALID_COORDINATES:\n            exception_class = InvalidCoordinatesException\n        elif status in ErrorCode.INVALID_SESSION_ID:\n            exception_class = InvalidSessionIdException\n        elif status in ErrorCode.UNKNOWN_METHOD:\n            exception_class = UnknownMethodException\n        else:\n            exception_class = WebDriverException\n        if not value:\n            value = response['value']\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and 'message' in value:\n            message = value['message']\n    \n        screen = None  # type: ignore[assignment]\n        if 'screen' in value:\n            screen = value['screen']\n    \n        stacktrace = None\n        st_value = value.get('stackTrace') or value.get('stacktrace')\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split('\\n')\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = self._value_or_default(frame, 'lineNumber', '')\n                        file = self._value_or_default(frame, 'fileName', '<anonymous>')\n                        if line:\n                            file = \"%s:%s\" % (file, line)\n                        meth = self._value_or_default(frame, 'methodName', '<anonymous>')\n                        if 'className' in frame:\n                            meth = \"%s.%s\" % (frame['className'], meth)\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if 'data' in value:\n                alert_text = value['data'].get('text')\n            elif 'alert' in value:\n                alert_text = value['alert'].get('text')\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.InvalidSelectorException: Message: invalid selector: Unable to locate an element with the xpath expression //div[@id='flash'][<class 'int'>] because of the following error:\nE       SyntaxError: Failed to execute 'evaluate' on 'Document': The string '//div[@id='flash'][<class 'int'>]' is not a valid XPath expression.\nE         (Session info: chrome=96.0.4664.45)\nE       Stacktrace:\nE       Backtrace:\nE       \tOrdinal0 [0x00766903+2517251]\nE       \tOrdinal0 [0x006FF8E1+2095329]\nE       \tOrdinal0 [0x00602848+1058888]\nE       \tOrdinal0 [0x00604F44+1068868]\nE       \tOrdinal0 [0x00604E0E+1068558]\nE       \tOrdinal0 [0x00605070+1069168]\nE       \tOrdinal0 [0x0062D1C2+1233346]\nE       \tOrdinal0 [0x0062D63B+1234491]\nE       \tOrdinal0 [0x00657812+1406994]\nE       \tOrdinal0 [0x0064650A+1336586]\nE       \tOrdinal0 [0x00655BBF+1399743]\nE       \tOrdinal0 [0x0064639B+1336219]\nE       \tOrdinal0 [0x006227A7+1189799]\nE       \tOrdinal0 [0x00623609+1193481]\nE       \tGetHandleVerifier [0x008F5904+1577972]\nE       \tGetHandleVerifier [0x009A0B97+2279047]\nE       \tGetHandleVerifier [0x007F6D09+534521]\nE       \tGetHandleVerifier [0x007F5DB9+530601]\nE       \tOrdinal0 [0x00704FF9+2117625]\nE       \tOrdinal0 [0x007098A8+2136232]\nE       \tOrdinal0 [0x007099E2+2136546]\nE       \tOrdinal0 [0x00713541+2176321]\nE       \tBaseThreadInitThunk [0x7555FA29+25]\nE       \tRtlGetAppContainerNamedObjectPath [0x77387A9E+286]\nE       \tRtlGetAppContainerNamedObjectPath [0x77387A6E+238]\n\n..\\venv\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:247: InvalidSelectorException"}, "steps": [{"name": "Init Login Page with following env: ENV.STAGE", "status": "passed", "start": 1637824121077, "stop": 1637824121077}, {"name": "Open url: https://the-internet.herokuapp.com/login", "status": "passed", "start": 1637824121077, "stop": 1637824122798}, {"name": "Current url: https://the-internet.herokuapp.com/login asserting https://the-internet.herokuapp.com/login", "status": "passed", "start": 1637824122805, "stop": 1637824122811}, {"name": "Locate Username field by: //input[@id='username'] locator", "status": "passed", "start": 1637824122811, "stop": 1637824122887}, {"name": "Insert  \"tomsmith\" into Username field ", "status": "passed", "start": 1637824122887, "stop": 1637824123002}, {"name": "Locate Password Field  by: //input[@id='password'] locator", "status": "passed", "start": 1637824123002, "stop": 1637824123073}, {"name": "Insert  \"******\" into Password field ", "status": "passed", "start": 1637824123073, "stop": 1637824123216}, {"name": "Locate Login button  by: //button[@type='submit'] locator", "status": "passed", "start": 1637824123216, "stop": 1637824123288}, {"name": "Click on Submit Button with : //button[@type='submit'] locator", "status": "passed", "start": 1637824123288, "stop": 1637824123840}, {"name": "Wait until we will be redirected to actual page", "status": "passed", "steps": [{"name": "Login took 0 seconds", "status": "passed", "start": 1637824124856, "stop": 1637824124856}], "start": 1637824123840, "stop": 1637824124856}, {"name": "Init Login Page with following env: ENV.STAGE", "status": "passed", "start": 1637824124857, "stop": 1637824124857}, {"name": "Current url: https://the-internet.herokuapp.com/secure asserting https://the-internet.herokuapp.com/secure", "status": "passed", "start": 1637824124865, "stop": 1637824124872}, {"name": "Add failed screenshot", "status": "passed", "attachments": [{"name": "Failed screenshot", "source": "7ec5d3a1-a71e-421a-833d-448f76d07b9f-attachment.png", "type": "image/png"}], "start": 1637824125481, "stop": 1637824125996}], "attachments": [{"name": "log", "source": "1d32bd47-8cf5-4038-8f1b-056d9d4cb1b5-attachment.txt", "type": "text/plain"}, {"name": "stdout", "source": "2d095c6d-81e2-4987-9904-780ea4ae4377-attachment.txt", "type": "text/plain"}, {"name": "stderr", "source": "6914f9e7-74b9-410a-b862-3bd1a2e9d6e8-attachment.txt", "type": "text/plain"}], "parameters": [{"name": "environment", "value": "<ENV.STAGE: (2, 'STAGE')>"}], "start": 1637824121076, "stop": 1637824124915, "uuid": "f28e3b56-5c09-4690-b752-104dbca73dcf", "historyId": "cecad37550bde2c82b7fa945054a4a90", "testCaseId": "35a7920858192c899de77629e605663a", "fullName": "tests.test_login.TestLogin#test_login_valid_creds", "labels": [{"name": "feature", "value": "Login Page"}, {"name": "tag", "value": "C9999"}, {"name": "tag", "value": "smoke"}, {"name": "parentSuite", "value": "tests"}, {"name": "suite", "value": "test_login"}, {"name": "subSuite", "value": "TestLogin"}, {"name": "host", "value": "LAPTOP-LKUFHBJQ"}, {"name": "thread", "value": "14308-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "tests.test_login"}], "links": [{"type": "test_case", "url": "https://accunture.testrail.io/index.php?/cases/view/9999", "name": "Test Case Link"}]}